
<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-md-6 col-lg-4">
      <div class="card border-0 shadow-sm">
        <div class="card-body p-4">
          <h4 class="text-center text-primary fw-bold mb-4">Create your account</h4>

          <form action="/auth/signup" method="POST" class="needs-validation" novalidate>
            <!-- Username -->
            <div class="mb-3">
              <label for="username" class="form-label">Username</label>
              <input
                type="text"
                class="form-control <%= errors?.find(e => e.param === 'username') ? 'is-invalid' : '' %>"
                id="username"
                name="username"
                value="<%= formData?.username || '' %>"
                minlength="3"
                maxlength="30"
                pattern="^[a-zA-Z0-9_]+$"
                placeholder="Enter username"
                required
              />
              <% errors?.filter(e => e.param === 'username').forEach(e => { %>
                <div class="invalid-feedback"><%= e.msg %></div>
              <% }) %>
              <div class="invalid-feedback">
                Username must be 3â€“30 characters and contain only letters, numbers, and underscores.
              </div>
            </div>

            <!-- Password -->
            <div class="mb-3">
              <label for="password" class="form-label">Password</label>
              <input
                type="password"
                class="form-control <%= errors?.find(e => e.param === 'password') ? 'is-invalid' : '' %>"
                id="password"
                name="password"
                minlength="8"
                placeholder="Enter password"
                required
              />
              <% errors?.filter(e => e.param === 'password').forEach(e => { %>
                <div class="invalid-feedback"><%= e.msg %></div>
              <% }) %>
              <div class="invalid-feedback">
                Password must be at least 8 characters, including uppercase, lowercase, number, and special character.
              </div>
            </div>


            <!-- Secret Passcode -->
            <div class="mb-3">
              <label for="accessCode" class="form-label">Access (optional)</label>
              <input
                type="password"
                class="form-control <%= errors?.find(e => e.param === 'accessCode') ? 'is-invalid' : '' %>"
                id="accessCode"
                name="accessCode"
                placeholder="Enter secret passcode"
              />
              <% errors?.filter(e => e.param === 'accessCode').forEach(e => { %>
                <div class="invalid-feedback"><%= e.msg %></div>
              <% }) %>
              <div class="invalid-feedback">
                Passcode is too long.
              </div>
            </div>

            <button type="submit" class="btn btn-primary w-100">Sign Up</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
(() => {
  "use strict";
  const forms = document.querySelectorAll(".needs-validation");
  Array.from(forms).forEach(form => {
    form.addEventListener("submit", event => {
      if (!form.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
      }
      form.classList.add("was-validated");
    }, false);
  });
})();
</script>
